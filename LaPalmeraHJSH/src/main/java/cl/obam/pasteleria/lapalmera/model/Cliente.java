package cl.obam.pasteleria.lapalmera.model;

// Generated 07-01-2016 12:33:38 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cliente generated by hbm2java
 */
@Entity
@Table(name = "cliente", catalog = "lapalmera")
public class Cliente implements java.io.Serializable {

	private String rut;
	private Comuna comuna;
	private Tipocliente tipocliente;
	private String dv;
	private String nombre;
	private String direccion;
	private Date fechanacimiento;
	private Integer telefono;
	private Integer celular;
	private String email;
	private String paginawebcliente;
	private String observacion;
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);

	public Cliente() {
	}

	public Cliente(String rut, Comuna comuna, Tipocliente tipocliente) {
		this.rut = rut;
		this.comuna = comuna;
		this.tipocliente = tipocliente;
	}

	public Cliente(String rut, Comuna comuna, Tipocliente tipocliente,
			String dv, String nombre, String direccion, Date fechanacimiento,
			Integer telefono, Integer celular, String email,
			String paginawebcliente, String observacion, Set<Pedido> pedidos) {
		this.rut = rut;
		this.comuna = comuna;
		this.tipocliente = tipocliente;
		this.dv = dv;
		this.nombre = nombre;
		this.direccion = direccion;
		this.fechanacimiento = fechanacimiento;
		this.telefono = telefono;
		this.celular = celular;
		this.email = email;
		this.paginawebcliente = paginawebcliente;
		this.observacion = observacion;
		this.pedidos = pedidos;
	}

	@Id
	@Column(name = "RUT", unique = true, nullable = false, length = 10)
	public String getRut() {
		return this.rut;
	}

	public void setRut(String rut) {
		this.rut = rut;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOCOMUNA", nullable = false)
	public Comuna getComuna() {
		return this.comuna;
	}

	public void setComuna(Comuna comuna) {
		this.comuna = comuna;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOTIPOCLIENTE", nullable = false)
	public Tipocliente getTipocliente() {
		return this.tipocliente;
	}

	public void setTipocliente(Tipocliente tipocliente) {
		this.tipocliente = tipocliente;
	}

	@Column(name = "DV", length = 45)
	public String getDv() {
		return this.dv;
	}

	public void setDv(String dv) {
		this.dv = dv;
	}

	@Column(name = "NOMBRE", length = 80)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "DIRECCION", length = 80)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHANACIMIENTO", length = 10)
	public Date getFechanacimiento() {
		return this.fechanacimiento;
	}

	public void setFechanacimiento(Date fechanacimiento) {
		this.fechanacimiento = fechanacimiento;
	}

	@Column(name = "TELEFONO")
	public Integer getTelefono() {
		return this.telefono;
	}

	public void setTelefono(Integer telefono) {
		this.telefono = telefono;
	}

	@Column(name = "CELULAR")
	public Integer getCelular() {
		return this.celular;
	}

	public void setCelular(Integer celular) {
		this.celular = celular;
	}

	@Column(name = "EMAIL", length = 80)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PAGINAWEBCLIENTE", length = 80)
	public String getPaginawebcliente() {
		return this.paginawebcliente;
	}

	public void setPaginawebcliente(String paginawebcliente) {
		this.paginawebcliente = paginawebcliente;
	}

	@Column(name = "OBSERVACION", length = 80)
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}

}
