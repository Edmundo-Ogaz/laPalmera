package cl.obam.pasteleria.lapalmera.model;

// Generated 07-01-2016 12:33:38 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto", catalog = "lapalmera")
public class Producto implements java.io.Serializable {

	private String codigoproducto;
	private Unidadmedida unidadmedida;
	private Tipoproducto tipoproducto;
	private Otracaracteristica otracaracteristica;
	private Familia familia;
	private Subfamilia subfamilia;
	private String nombreproducto;
	private Integer stockcriticoproducto;
	private Integer valorcosto;
	private Integer valorventa;
	private String preparacion;
	private String fotoproducto;
	private String observacion;
	private Set<Ubicacion> ubicacions = new HashSet<Ubicacion>(0);
	private Set<Productolinea> productolineas = new HashSet<Productolinea>(0);
	private Stock stock;
	private Set<Detalledevolucioninsumo> detalledevolucioninsumos = new HashSet<Detalledevolucioninsumo>(
			0);
	private Set<Ingrediente> ingredientesForCodigoproducto = new HashSet<Ingrediente>(
			0);
	private Set<Ingrediente> ingredientesForCodigoinsumo = new HashSet<Ingrediente>(
			0);
	private Set<Ordenfabricacion> ordenfabricacions = new HashSet<Ordenfabricacion>(
			0);
	private Set<Fichatecnica> fichatecnicas = new HashSet<Fichatecnica>(0);
	private Set<Detallepedido> detallepedidos = new HashSet<Detallepedido>(0);
	private Set<Capturaproduccion> capturaproduccions = new HashSet<Capturaproduccion>(
			0);
	private Set<Programaproduccion> programaproduccions = new HashSet<Programaproduccion>(
			0);
	private Set<Detalleentregainsumo> detalleentregainsumos = new HashSet<Detalleentregainsumo>(
			0);

	public Producto() {
	}

	public Producto(String codigoproducto, Unidadmedida unidadmedida,
			Otracaracteristica otracaracteristica, Familia familia,
			Subfamilia subfamilia) {
		this.codigoproducto = codigoproducto;
		this.unidadmedida = unidadmedida;
		this.otracaracteristica = otracaracteristica;
		this.familia = familia;
		this.subfamilia = subfamilia;
	}

	public Producto(String codigoproducto, Unidadmedida unidadmedida,
			Tipoproducto tipoproducto, Otracaracteristica otracaracteristica,
			Familia familia, Subfamilia subfamilia, String nombreproducto,
			Integer stockcriticoproducto, Integer valorcosto,
			Integer valorventa, String preparacion, String fotoproducto,
			String observacion, Set<Ubicacion> ubicacions,
			Set<Productolinea> productolineas, Stock stock,
			Set<Detalledevolucioninsumo> detalledevolucioninsumos,
			Set<Ingrediente> ingredientesForCodigoproducto,
			Set<Ingrediente> ingredientesForCodigoinsumo,
			Set<Ordenfabricacion> ordenfabricacions,
			Set<Fichatecnica> fichatecnicas, Set<Detallepedido> detallepedidos,
			Set<Capturaproduccion> capturaproduccions,
			Set<Programaproduccion> programaproduccions,
			Set<Detalleentregainsumo> detalleentregainsumos) {
		this.codigoproducto = codigoproducto;
		this.unidadmedida = unidadmedida;
		this.tipoproducto = tipoproducto;
		this.otracaracteristica = otracaracteristica;
		this.familia = familia;
		this.subfamilia = subfamilia;
		this.nombreproducto = nombreproducto;
		this.stockcriticoproducto = stockcriticoproducto;
		this.valorcosto = valorcosto;
		this.valorventa = valorventa;
		this.preparacion = preparacion;
		this.fotoproducto = fotoproducto;
		this.observacion = observacion;
		this.ubicacions = ubicacions;
		this.productolineas = productolineas;
		this.stock = stock;
		this.detalledevolucioninsumos = detalledevolucioninsumos;
		this.ingredientesForCodigoproducto = ingredientesForCodigoproducto;
		this.ingredientesForCodigoinsumo = ingredientesForCodigoinsumo;
		this.ordenfabricacions = ordenfabricacions;
		this.fichatecnicas = fichatecnicas;
		this.detallepedidos = detallepedidos;
		this.capturaproduccions = capturaproduccions;
		this.programaproduccions = programaproduccions;
		this.detalleentregainsumos = detalleentregainsumos;
	}

	@Id
	@Column(name = "CODIGOPRODUCTO", unique = true, nullable = false, length = 20)
	public String getCodigoproducto() {
		return this.codigoproducto;
	}

	public void setCodigoproducto(String codigoproducto) {
		this.codigoproducto = codigoproducto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOUNIDADMEDIDA", nullable = false)
	public Unidadmedida getUnidadmedida() {
		return this.unidadmedida;
	}

	public void setUnidadmedida(Unidadmedida unidadmedida) {
		this.unidadmedida = unidadmedida;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPOPRODUCTO")
	public Tipoproducto getTipoproducto() {
		return this.tipoproducto;
	}

	public void setTipoproducto(Tipoproducto tipoproducto) {
		this.tipoproducto = tipoproducto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOOTRACARACTERISTICA", nullable = false)
	public Otracaracteristica getOtracaracteristica() {
		return this.otracaracteristica;
	}

	public void setOtracaracteristica(Otracaracteristica otracaracteristica) {
		this.otracaracteristica = otracaracteristica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOFAMILIA", nullable = false)
	public Familia getFamilia() {
		return this.familia;
	}

	public void setFamilia(Familia familia) {
		this.familia = familia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGOSUBFAMILIA", nullable = false)
	public Subfamilia getSubfamilia() {
		return this.subfamilia;
	}

	public void setSubfamilia(Subfamilia subfamilia) {
		this.subfamilia = subfamilia;
	}

	@Column(name = "NOMBREPRODUCTO", length = 80)
	public String getNombreproducto() {
		return this.nombreproducto;
	}

	public void setNombreproducto(String nombreproducto) {
		this.nombreproducto = nombreproducto;
	}

	@Column(name = "STOCKCRITICOPRODUCTO")
	public Integer getStockcriticoproducto() {
		return this.stockcriticoproducto;
	}

	public void setStockcriticoproducto(Integer stockcriticoproducto) {
		this.stockcriticoproducto = stockcriticoproducto;
	}

	@Column(name = "VALORCOSTO")
	public Integer getValorcosto() {
		return this.valorcosto;
	}

	public void setValorcosto(Integer valorcosto) {
		this.valorcosto = valorcosto;
	}

	@Column(name = "VALORVENTA")
	public Integer getValorventa() {
		return this.valorventa;
	}

	public void setValorventa(Integer valorventa) {
		this.valorventa = valorventa;
	}

	@Column(name = "PREPARACION", length = 250)
	public String getPreparacion() {
		return this.preparacion;
	}

	public void setPreparacion(String preparacion) {
		this.preparacion = preparacion;
	}

	@Column(name = "FOTOPRODUCTO", length = 80)
	public String getFotoproducto() {
		return this.fotoproducto;
	}

	public void setFotoproducto(String fotoproducto) {
		this.fotoproducto = fotoproducto;
	}

	@Column(name = "OBSERVACION", length = 80)
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Ubicacion> getUbicacions() {
		return this.ubicacions;
	}

	public void setUbicacions(Set<Ubicacion> ubicacions) {
		this.ubicacions = ubicacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Productolinea> getProductolineas() {
		return this.productolineas;
	}

	public void setProductolineas(Set<Productolinea> productolineas) {
		this.productolineas = productolineas;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "producto")
	public Stock getStock() {
		return this.stock;
	}

	public void setStock(Stock stock) {
		this.stock = stock;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Detalledevolucioninsumo> getDetalledevolucioninsumos() {
		return this.detalledevolucioninsumos;
	}

	public void setDetalledevolucioninsumos(
			Set<Detalledevolucioninsumo> detalledevolucioninsumos) {
		this.detalledevolucioninsumos = detalledevolucioninsumos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productoByCodigoproducto")
	public Set<Ingrediente> getIngredientesForCodigoproducto() {
		return this.ingredientesForCodigoproducto;
	}

	public void setIngredientesForCodigoproducto(
			Set<Ingrediente> ingredientesForCodigoproducto) {
		this.ingredientesForCodigoproducto = ingredientesForCodigoproducto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productoByCodigoinsumo")
	public Set<Ingrediente> getIngredientesForCodigoinsumo() {
		return this.ingredientesForCodigoinsumo;
	}

	public void setIngredientesForCodigoinsumo(
			Set<Ingrediente> ingredientesForCodigoinsumo) {
		this.ingredientesForCodigoinsumo = ingredientesForCodigoinsumo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Ordenfabricacion> getOrdenfabricacions() {
		return this.ordenfabricacions;
	}

	public void setOrdenfabricacions(Set<Ordenfabricacion> ordenfabricacions) {
		this.ordenfabricacions = ordenfabricacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Fichatecnica> getFichatecnicas() {
		return this.fichatecnicas;
	}

	public void setFichatecnicas(Set<Fichatecnica> fichatecnicas) {
		this.fichatecnicas = fichatecnicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Detallepedido> getDetallepedidos() {
		return this.detallepedidos;
	}

	public void setDetallepedidos(Set<Detallepedido> detallepedidos) {
		this.detallepedidos = detallepedidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Capturaproduccion> getCapturaproduccions() {
		return this.capturaproduccions;
	}

	public void setCapturaproduccions(Set<Capturaproduccion> capturaproduccions) {
		this.capturaproduccions = capturaproduccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Programaproduccion> getProgramaproduccions() {
		return this.programaproduccions;
	}

	public void setProgramaproduccions(
			Set<Programaproduccion> programaproduccions) {
		this.programaproduccions = programaproduccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Detalleentregainsumo> getDetalleentregainsumos() {
		return this.detalleentregainsumos;
	}

	public void setDetalleentregainsumos(
			Set<Detalleentregainsumo> detalleentregainsumos) {
		this.detalleentregainsumos = detalleentregainsumos;
	}

}
